@@
expression E0, E1, E2;
@@
- for(E0 = 0;environ[E0];E0++)  
+ char * const *e = environ; 
+ for(E0 = 0;e[E0];++E0)  
  {
  ...
- if (NULL != (E1 = strchr(environ[E0], '=')))  
+ if (NULL != (E1 = strchr(e[E0], '=')))  
  {
- env_add(&E2, environ[E0], E1 - environ[E0], E1 + 1, strlen(E1 + 1)); 
+ env_add(&E2, e[E0], E1 - e[E0], E1 + 1, strlen(E1 + 1)); 
  }
  ...
  }
// Infered from: (lighttpd1.4/{prevFiles/prev_d7638b_49c74f_src#mod_scgi.c,revFiles/d7638b_49c74f_src#mod_scgi.c}: scgi_spawn_connection), (lighttpd1.4/{prevFiles/prev_d7638b_49c74f_src#mod_fastcgi.c,revFiles/d7638b_49c74f_src#mod_fastcgi.c}: fcgi_spawn_connection)
// False positives: (lighttpd1.4/revFiles/d7638b_49c74f_src#mod_fastcgi.c: fcgi_spawn_connection), (lighttpd1.4/revFiles/d7638b_49c74f_src#mod_scgi.c: scgi_spawn_connection)
// Recall: 0.60, Precision: 0.86, Matching recall: 0.86

// ---------------------------------------------
