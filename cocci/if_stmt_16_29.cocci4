@@
identifier I0;
expression E1, E2, E3, E4;
typedef curl_socket_t;
@@
- int I0 = 0; 
+ curl_socket_t I0 = (curl_socket_t )-1; 
  ...
- E1 = select(I0 + 1, &E2, &E3, NULL, &E4); 
+ E1 = select((int )I0 + 1, &E2, &E3, NULL, &E4); 
// Infered from: (curl/{prevFiles/prev_2705af_f34ddb_tests#server#sws.c,revFiles/2705af_f34ddb_tests#server#sws.c}: http_connect)
// Recall: 0.15, Precision: 1.00, Matching recall: 0.17

// ---------------------------------------------
// Final metrics (for the combined 5 rules):
// -- Edit Location --
// Recall: 0.33, Precision: 1.00
// -- Node Change --
// Recall: 0.77, Precision: 1.00
// -- General --
// Functions fully changed: 0/3(0%)

/*
Functions where the patch applied partially:
 - curl/prevFiles/prev_2705af_f34ddb_tests#server#sws.c: http_connect
*/
/*
Functions where the patch did not apply:
 - vlc/prevFiles/prev_38d1b1_b41f12_modules#demux#dirac.c: Demux
 - curl/prevFiles/prev_2705af_f34ddb_tests#server#sws.c: connect_to
*/

// ---------------------------------------------
