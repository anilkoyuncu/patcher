@@
expression E0, E1;
iterator name list_for_each_entry_safe;
@@
- while (list_empty(&E0->prov_list) == 0)  
+ list_for_each_entry_safe (E1, tmp, &E0->prov_list, list)  
  {
  ...
- E1 = list_entry(E0->prov_list.next, struct prov_record , list); 
  ...
  }
// Infered from: (linux/{prevFiles/prev_d19cb86_68f4b7_drivers#staging#ft1000#ft1000-usb#ft1000_hw.c,revFiles/d19cb86_68f4b7_drivers#staging#ft1000#ft1000-usb#ft1000_hw.c}: ft1000_reset_card), (linux/{prevFiles/prev_d19cb86_68f4b7_drivers#staging#ft1000#ft1000-pcmcia#ft1000_hw.c,revFiles/d19cb86_68f4b7_drivers#staging#ft1000#ft1000-pcmcia#ft1000_hw.c}: ft1000_reset_card)
// False positives: (linux/revFiles/d19cb86_68f4b7_drivers#staging#ft1000#ft1000-pcmcia#ft1000_hw.c: ft1000_proc_drvmsg)
// Recall: 0.75, Precision: 0.75, Matching recall: 0.75

// ---------------------------------------------
// Final metrics (for the combined 2 rules):
// -- Edit Location --
// Recall: 1.00, Precision: 0.75
// -- Node Change --
// Recall: 0.75, Precision: 0.75
// -- General --
// Functions fully changed: 0/4(0%)

/*
Functions where the patch applied partially:
 - linux/prevFiles/prev_d19cb86_68f4b7_drivers#staging#ft1000#ft1000-usb#ft1000_hw.c: ft1000_reset_card
 - linux/prevFiles/prev_d19cb86_68f4b7_drivers#staging#ft1000#ft1000-pcmcia#ft1000_hw.c: ft1000_reset_card
 - linux/prevFiles/prev_d19cb86_68f4b7_drivers#staging#ft1000#ft1000-pcmcia#ft1000_hw.c: stop_ft1000_card
*/
/*
Functions where the patch produced incorrect changes:
 - linux/prevFiles/prev_d19cb86_68f4b7_drivers#staging#ft1000#ft1000-pcmcia#ft1000_hw.c: ft1000_proc_drvmsg
*/

// ---------------------------------------------
