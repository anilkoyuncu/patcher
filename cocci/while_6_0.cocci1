@@
expression E1, E2, E3, E4, E0;
@@
- while (E0 && E1 == '0' && (E2 + 1 < E3) && !ispunct(E4[E2 + 1]))  
- {
  ...
- }
// Infered from: (php-src/{prevFiles/prev_f4c896_f5e52c_ext#standard#strnatcmp.c,revFiles/f4c896_f5e52c_ext#standard#strnatcmp.c}: strnatcmp_ex), (php-src/{prevFiles/prev_f4c896_f5e52c_ext#standard#strnatcmp.c,revFiles/f4c896_f5e52c_ext#standard#strnatcmp.c}: strnatcmp_ex)
// Recall: 0.17, Precision: 1.00, Matching recall: 0.50

// ---------------------------------------------
// Final metrics (for the combined 2 rules):
// -- Edit Location --
// Recall: 1.00, Precision: 1.00
// -- Node Change --
// Recall: 0.50, Precision: 1.00
// -- General --
// Functions fully changed: 0/3(0%)

/*
Functions where the patch applied partially:
 - php-src/prevFiles/prev_f4c896_f5e52c_ext#standard#strnatcmp.c: strnatcmp_ex
 - php-src/prevFiles/prev_b3de24_91315a_ext#standard#strnatcmp.c: strnatcmp_ex
 - php-src/prevFiles/prev_5803d3_3758a5_ext#standard#strnatcmp.c: strnatcmp_ex
*/

// ---------------------------------------------
