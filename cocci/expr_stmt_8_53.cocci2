@@
type T5;
expression E0, E1, E2, E3, E4;
typedef int64_t;
@@
- OPAL_OUTPUT_VERBOSE((50, ompi_mtl_base_framework.framework_output, "Recv %lu from %x,%x of length %d (0x%lx, 0x%lx, 0x%lx)\n", E0->opcount, E1.phys.nid, E1.phys.pid, (  int )E2, E3, E4, (T5 )E0)); 
+ OPAL_OUTPUT_VERBOSE((50, ompi_mtl_base_framework.framework_output, "Recv %lu from %x,%x of length %ld (0x%lx, 0x%lx, 0x%lx)\n", E0->opcount, E1.phys.nid, E1.phys.pid, (  int64_t )E2, E3, E4, (T5 )E0)); 
// Infered from: (ompi/{prevFiles/prev_8a4616_18b75b_ompi#mca#mtl#portals4#mtl_portals4_recv.c,revFiles/8a4616_18b75b_ompi#mca#mtl#portals4#mtl_portals4_recv.c}: ompi_mtl_portals4_irecv)
// Recall: 0.25, Precision: 1.00, Matching recall: 1.00

// ---------------------------------------------
// Final metrics (for the combined 3 rules):
// -- Edit Location --
// Recall: 0.75, Precision: 1.00
// -- Node Change --
// Recall: 0.75, Precision: 1.00
// -- General --
// Functions fully changed: 3/4(75%)

/*
Functions where the patch did not apply:
 - ompi/prevFiles/prev_8a4616_18b75b_ompi#mca#mtl#portals4#mtl_portals4_send.c: ompi_mtl_portals4_long_isend
*/

// ---------------------------------------------
